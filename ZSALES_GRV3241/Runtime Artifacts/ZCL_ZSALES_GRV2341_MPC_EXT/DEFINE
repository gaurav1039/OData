  METHOD define.

    super->define( ).

*    DATA : lo_annotation  TYPE REF TO /iwbep/if_mgw_odata_annotation.
*    DATA :      lo_property    TYPE REF TO /iwbep/if_mgw_odata_property.
    DATA :       lo_entity_set  TYPE REF TO /iwbep/if_mgw_odata_entity_set.
    DATA :       lo_entity_type TYPE REF TO /iwbep/if_mgw_odata_entity_typ.

    DATA: lo_ann_target  TYPE REF TO /iwbep/if_mgw_vocan_ann_target.   " Vocabulary Annotation Target
    DATA: lo_ann_target2 TYPE REF TO /iwbep/if_mgw_vocan_ann_target.   " Vocabulary Annotation Target
    DATA: lo_annotation  TYPE REF TO /iwbep/if_mgw_vocan_annotation.   " Vocabulary Annotation
    DATA: lo_collection  TYPE REF TO /iwbep/if_mgw_vocan_collection.   " Vocabulary Annotation Collection
    DATA: lo_function    TYPE REF TO /iwbep/if_mgw_vocan_function.     " Vocabulary Annotation Function
    DATA: lo_fun_param   TYPE REF TO /iwbep/if_mgw_vocan_fun_param.    " Vocabulary Annotation Function Parameter
    DATA: lo_property    TYPE REF TO /iwbep/if_mgw_vocan_property.     " Vocabulary Annotation Property
    DATA: lo_record      TYPE REF TO /iwbep/if_mgw_vocan_record.       " Vocabulary Annotation Record
    DATA: lo_simp_value  TYPE REF TO /iwbep/if_mgw_vocan_simple_val.   " Vocabulary Annotation Simple Value
    DATA: lo_url         TYPE REF TO /iwbep/if_mgw_vocan_url.          " Vocabulary Annotation URL
    DATA: lo_label_elem  TYPE REF TO /iwbep/if_mgw_vocan_label_elem.   " Vocabulary Annotation Labeled Element
    DATA: lo_reference   TYPE REF TO /iwbep/if_mgw_vocan_reference.    " Vocabulary Annotation Reference
    DATA: lr_annotation TYPE REF TO cl_fis_shlp_annotation.

    model->set_soft_state_enabled( iv_soft_state_enabled = abap_true ).


    lo_reference = vocab_anno_model->create_vocabulary_reference( iv_vocab_id = '/IWBEP/VOC_UI' iv_vocab_version = '0001').
    lo_reference->create_include( iv_namespace = 'com.sap.vocabularies.UI.v1' iv_alias = 'UI' ).

"Customer Search Help Annotation
*    lr_annotation = cl_fis_shlp_annotation=>create(
*    io_odata_model               = model
*    io_vocan_model               = vocab_anno_model
*    iv_namespace                 = 'ZSALES_GRV2341_SRV'
*    iv_entitytype                = 'salesHeader'
*    iv_property                  = 'Vbeln'
*    iv_search_help               = 'DEBIA_'
*    iv_search_help_field         = 'SalesOrd'
*    iv_valuelist_entityset       = 'SalesOrdSrchHelpSet'
*    iv_valuelist_property        = 'Sales_Ord' ).
*
*    lr_annotation->add_display_parameter( iv_valuelist_property  = 'Vbeln' ) .
*    lr_annotation->add_display_parameter( iv_valuelist_property  = 'Erdat' ) .
**lr_annotation->add_display_parameter( iv_valuelist_property  = 'PostCode' ) .
**lr_annotation->add_display_parameter( iv_valuelist_property  = 'City' )



*    TRY .
*
*        "make Vbeln field mandatory and single value
*
*        lo_entity_type = model->get_entity_type( iv_entity_name = 'salesheader' ).
*        lo_property = lo_entity_type->get_property( iv_property_name = 'Vbeln' ).
*
*        lo_annotation = lo_property->/iwbep/if_mgw_odata_annotatabl~create_annotation( 'sap' ).
**        lo_annotation = lo_property->/iwbep/if_mgw_odata_annotatabl~create_annotation(
**                              iv_annotation_namespace = /iwbep/if_mgw_med_odata_types=>gc_sap_namespace )
**                  CATCH /iwbep/cx_mgw_med_exception.  "
*        .
*        lo_annotation->add( iv_key = 'required-in-filter'
*        iv_value = 'true' ).
*
*        lo_annotation->add( iv_key = 'filter-restriction'
*        iv_value = 'single-value' ).
*
*      CATCH /iwbep/cx_mgw_med_exception .
*    ENDTRY.



    "annotations for entity type Sales Order
    lo_ann_target = vocab_anno_model->create_annotations_target( 'salesHeader' ).
    lo_ann_target->set_namespace_qualifier( 'ZSALES_GRV2341_SRV' ).    "change the namespace to the SRV namespace

    " Header Info
    lo_annotation = lo_ann_target->create_annotation( iv_term = 'UI.HeaderInfo' ).
    lo_record = lo_annotation->create_record( ).
    lo_record->create_property( 'TypeName' )->create_simple_value( )->set_string('salesHeader').
    lo_record->create_property( 'TypeNamePlural' )->create_simple_value( )->set_string( 'salesHeaders').

    " Columns to be displayed by default
    lo_annotation = lo_ann_target->create_annotation( iv_term = 'UI.LineItem' ).
    lo_collection = lo_annotation->create_collection( ).

    lo_record = lo_collection->create_record( iv_record_type = 'UI.DataField' ).
    lo_property = lo_record->create_property( 'Label' ).
    lo_simp_value = lo_property->create_simple_value( ).
    lo_simp_value->set_string( 'Salesorder' ).
    lo_property = lo_record->create_property( 'Value' ).
    lo_simp_value = lo_property->create_simple_value( ).
    lo_simp_value->set_path( 'Vbeln' ).

    lo_record = lo_collection->create_record( iv_record_type = 'UI.DataField' ).
    lo_property = lo_record->create_property( 'Label' ).
    lo_simp_value = lo_property->create_simple_value( ).
    lo_simp_value->set_string( 'Created on' ).
    lo_property = lo_record->create_property( 'Value' ).
    lo_simp_value = lo_property->create_simple_value( ).
    lo_simp_value->set_path( 'Erdat' ).

    lo_record = lo_collection->create_record( iv_record_type = 'UI.DataField' ).
    lo_property = lo_record->create_property( 'Label' ).
    lo_simp_value = lo_property->create_simple_value( ).
    lo_simp_value->set_string( 'Created at' ).
    lo_property = lo_record->create_property( 'Value' ).
    lo_simp_value = lo_property->create_simple_value( ).
    lo_simp_value->set_path( 'Erzet' ).

    lo_record = lo_collection->create_record( iv_record_type = 'UI.DataField' ).
    lo_property = lo_record->create_property( 'Label' ).
    lo_simp_value = lo_property->create_simple_value( ).
    lo_simp_value->set_string( 'Created by' ).
    lo_property = lo_record->create_property( 'Value' ).
    lo_simp_value = lo_property->create_simple_value( ).
    lo_simp_value->set_path( 'Ernam' ).


    """"""""""""""""

    " Columns to be displayed in the object page
    lo_annotation = lo_ann_target->create_annotation(
          EXPORTING
            iv_term       = 'UI.Identification' ).
    lo_collection = lo_annotation->create_collection( ).

    lo_record = lo_collection->create_record( iv_record_type = 'UI.DataField' ).
    lo_property = lo_record->create_property( 'Label' ).
    lo_simp_value = lo_property->create_simple_value( ).
    lo_simp_value->set_string( 'Salesorder' ).
    lo_property = lo_record->create_property( 'Value' ).
    lo_simp_value = lo_property->create_simple_value( ).
    lo_simp_value->set_path( 'Vbeln' ).
*
    lo_record = lo_collection->create_record( iv_record_type = 'UI.DataField' ).
    lo_property = lo_record->create_property( 'Label' ).
    lo_simp_value = lo_property->create_simple_value( ).
    lo_simp_value->set_string( 'Created on' ).
    lo_property = lo_record->create_property( 'Value' ).
    lo_simp_value = lo_property->create_simple_value( ).
    lo_simp_value->set_path( 'Erdat' ).
*
    lo_record = lo_collection->create_record( iv_record_type = 'UI.DataField' ).
    lo_property = lo_record->create_property( 'Label' ).
    lo_simp_value = lo_property->create_simple_value( ).
    lo_simp_value->set_string( 'Created at' ).
    lo_property = lo_record->create_property( 'Value' ).
    lo_simp_value = lo_property->create_simple_value( ).
    lo_simp_value->set_path( 'Erzet' ).
*
    lo_record = lo_collection->create_record( iv_record_type = 'UI.DataField' ).
    lo_property = lo_record->create_property( 'Label' ).
    lo_simp_value = lo_property->create_simple_value( ).
    lo_simp_value->set_string( 'Created By' ).
    lo_property = lo_record->create_property( 'Value' ).
    lo_simp_value = lo_property->create_simple_value( ).
    lo_simp_value->set_path( 'Ernam' ).
*
******************************************
*
* " Gross amount to be displayed as a data point
*    lo_annotation = lo_ann_target->create_annotation(
*          EXPORTING
*            iv_term      = 'UI.DataPoint'
*            iv_qualifier = 'Grossamountintransaccurrency' ).
*    lo_record = lo_annotation->create_record( iv_record_type = 'UI.DataField' ).
*    lo_record->create_property( 'Value' )->create_simple_value( )->set_path('Grossamountintransaccurrency').
*    lo_record->create_property( 'Title' )->create_simple_value( )->set_string( 'Gross amount' ).
*
**    **********************
*
*    "Header Facets
    lo_collection = lo_ann_target->create_annotation( iv_term = 'UI.HeaderFacets' )->create_collection( ).

    "Facet for Sales Order Header Details on object page
    lo_record = lo_collection->create_record( iv_record_type = 'UI.ReferenceFacet' ).
    lo_record->create_property( 'ID' )->create_simple_value( )->set_string( 'GeneralInformation' ).
    lo_record->create_property( 'Label' )->create_simple_value( )->set_string( 'General Information' ).
    lo_record->create_property( 'Target')->create_simple_value( )->set_annotation_path( '@UI.Identification' ).
*
*    "Facet for Gross amount
*    lo_record = lo_collection->create_record( iv_record_type = 'UI.ReferenceFacet' ).
*    lo_record->create_property( 'ID' )->create_simple_value( )->set_string( 'GrossAmount' ).
*    lo_record->create_property( 'Label' )->create_simple_value( )->set_string( 'Gross amount' ).
*    lo_record->create_property( 'Target')->create_simple_value( )->set_annotation_path( '@UI.DataPoint#Grossamountintransaccurrency' ).
*
*    Facet for Sales Order Header Details on object page
    lo_collection = lo_ann_target->create_annotation( iv_term = 'UI.Facets' )->create_collection( ).

    lo_record = lo_collection->create_record( iv_record_type = 'UI.ReferenceFacet' ).
    lo_record->create_property( 'ID' )->create_simple_value( )->set_string( 'ItemList' ).
    lo_record->create_property( 'Label' )->create_simple_value( )->set_string( 'Item List' ).
    lo_record->create_property( 'Target')->create_simple_value( )->set_annotation_path( 'salesItemNav/@UI.LineItem' ).
*
**    *****************************
**    *****************************
*
* "add annotations for sales order line items
    lo_ann_target2 = vocab_anno_model->create_annotations_target( 'salesItem' ).
    lo_ann_target2->set_namespace_qualifier( 'ZSALES_GRV2341_SRV' ).    "change the namespace to the SRV namespace

    " Columns to be displayed by default
    lo_annotation = lo_ann_target2->create_annotation( iv_term = 'UI.LineItem' ).
    lo_collection = lo_annotation->create_collection( ).

    lo_record = lo_collection->create_record( iv_record_type = 'UI.DataField' ).
    lo_property = lo_record->create_property( 'Label' ).
    lo_simp_value = lo_property->create_simple_value( ).
    lo_simp_value->set_string( 'Item' ).
    lo_property = lo_record->create_property( 'Value' ).
    lo_simp_value = lo_property->create_simple_value( ).
    lo_simp_value->set_path( 'Posnr' ).

*    lo_record = lo_collection->create_record( iv_record_type = 'UI.DataField' ).
*    lo_property = lo_record->create_property( 'Label' ).
*    lo_simp_value = lo_property->create_simple_value( ).
*    lo_simp_value->set_string( 'Item' ).
*    lo_property = lo_record->create_property( 'Value' ).
*    lo_simp_value = lo_property->create_simple_value( ).
*    lo_simp_value->set_path( 'Salesorderitem' ).
*
*    lo_record = lo_collection->create_record( iv_record_type = 'UI.DataField' ).
*    lo_property = lo_record->create_property( 'Label' ).
*    lo_simp_value = lo_property->create_simple_value( ).
*    lo_simp_value->set_string( 'Gross amount' ).
*    lo_property = lo_record->create_property( 'Value' ).
*    lo_simp_value = lo_property->create_simple_value( ).
*    lo_simp_value->set_path( 'Grossamountintransaccurrency' ).
*
*    lo_record = lo_collection->create_record( iv_record_type = 'UI.DataField' ).
*    lo_property = lo_record->create_property( 'Label' ).
*    lo_simp_value = lo_property->create_simple_value( ).
*    lo_simp_value->set_string( 'Currency' ).
*    lo_property = lo_record->create_property( 'Value' ).
*    lo_simp_value = lo_property->create_simple_value( ).
**    lo_simp_value->set_path( 'Transactioncurrency' ).



  ENDMETHOD.
