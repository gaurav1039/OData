  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_EXPANDED_ENTITYSET.

    DATA: BEGIN OF ts_deep_entity.
        INCLUDE   TYPE zcl_zsales_grv2341_mpc_ext=>ts_salesheader.
    DATA: salesitemnav TYPE zcl_zsales_grv2341_mpc_ext=>tt_salesitem,
          END OF ts_deep_entity.

    DATA: it_deep_entity LIKE TABLE OF ts_deep_entity,
          wa_deep_entity LIKE LINE OF it_deep_entity.

    DATA: it_header TYPE TABLE OF vbak,
          it_item   TYPE TABLE OF vbap.

    DATA: wa_sales_item TYPE zcl_zsales_grv2341_mpc_ext=>ts_salesitem.

    DATA(lv_entity_set_name) = io_tech_request_context->get_entity_set_name( ).

    CASE lv_entity_set_name.
      WHEN 'salesHeaderSet'.
        SELECT * FROM vbak INTO TABLE it_header UP TO 20 ROWS.

        IF sy-subrc = 0.
          SELECT * FROM vbap INTO TABLE it_item
            FOR ALL ENTRIES IN it_header
            WHERE vbeln = it_header-vbeln.
        ENDIF.

        LOOP AT it_header INTO DATA(wa_header) .
          MOVE-CORRESPONDING wa_header TO wa_deep_entity.

          LOOP AT it_item INTO DATA(wa_item) WHERE vbeln = wa_header-vbeln.
            MOVE-CORRESPONDING wa_item TO wa_sales_item.
            APPEND wa_sales_item TO wa_deep_entity-salesitemnav.
            CLEAR: wa_sales_item, wa_item.
          ENDLOOP.
          APPEND wa_deep_entity TO it_deep_entity.
          CLEAR: wa_deep_entity, wa_header.

        ENDLOOP.
        CALL METHOD me->/iwbep/if_mgw_conv_srv_runtime~copy_data_to_ref
          EXPORTING
            is_data = it_deep_entity
          CHANGING
            cr_data = er_entityset.

    ENDCASE.
*
  endmethod.
